sudo: required
dist: xenial
language: cpp
compiler: gcc

addons:
  apt:
    sources:
      - sourceline: 'ppa:ubuntu-sdk-team/ppa'
#      - sourceline: 'ppa:team-gcc-arm-embedded/ppa'
      - sourceline: 'ppa:ubuntu-toolchain-r/test'
      - sourceline: 'ppa:beineri/opt-qt571-xenial'
    update: true
    packages:
      - curl
      - libmpfr4
      - libmpc3
      - libfox-1.6-dev
      - libgtest-dev
      - clang-6.0
#      - gcc-arm-embedded
env:
  global:
    # - QT_BASE=53
    # - QT_BASE=54
    # - QT_BASE=55
    # - QT_BASE=56
    - QT_BASE=57
    # - GCC_ARM=/opt/gcc-arm-none-eabi/bin
    - PYTHONPATH=${PYTHONPATH}:/usr/lib/python3/dist-packages
    - GCC_ARM_VERSION=4_7-2013q3
  matrix:
    #
    # ALL will build every individual board & DEFAULT, sequentially.
    # DEFAULT is "make all" (including Companion & Simulator), with default settings
    #
    # - FLAVOR=ALL
    - FLAVOR=DEFAULT
    - FLAVOR=ARM9X
    - FLAVOR=X9LITE
    - FLAVOR=X7
    - FLAVOR=XLITE
    - FLAVOR=X9
    - FLAVOR=COLORLCD

before_install:
  # Trying to build with gcc-arm 4.7 isn't working because it can't find the compiler, despite adding to PATH (in commit-tests.sh) by defining GCC_ARM above
  - wget --quiet https://launchpad.net/gcc-arm-embedded/4.7/4.7-2013-q3-update/+download/gcc-arm-none-eabi-${GCC_ARM_VERSION}-20130916-linux.tar.bz2
  - tar xjf gcc-arm-none-eabi-${GCC_ARM_VERSION}-20130916-linux.tar.bz2
  - sudo mv gcc-arm-none-eabi-${GCC_ARM_VERSION} /opt/gcc-arm-none-eabi
  - sudo ln -s /opt/gcc-arm-none-eabi/bin/arm-none-eabi-gcc /usr/bin/arm-none-eabi-gcc
  - sudo ln -s /opt/gcc-arm-none-eabi/bin/arm-none-eabi-g++ /usr/bin/arm-none-eabi-g++
  - sudo ln -s /opt/gcc-arm-none-eabi/bin/arm-none-eabi-as /usr/bin/arm-none-eabi-as
  - sudo ln -s /opt/gcc-arm-none-eabi/bin/arm-none-eabi-objcopy /usr/bin/arm-none-eabi-objcopy
  - sudo ln -s /opt/gcc-arm-none-eabi/bin/arm-none-eabi-objdump /usr/bin/arm-none-eabi-objdump
  - sudo ln -s /opt/gcc-arm-none-eabi/bin/arm-none-eabi-size /usr/bin/arm-none-eabi-size
  - sudo apt-get install --yes --force-yes -qq qt${QT_BASE}base qt${QT_BASE}multimedia qt${QT_BASE}svg qt${QT_BASE}tools; source /opt/qt${QT_BASE}/bin/qt${QT_BASE}-env.sh
#  - pyenv uninstall -f 2.7.6 && pyenv install 3.5.4 && pyenv global 3.5.4
  - python3 -m pip install pillow clang

script:
  - ./tools/commit-tests.sh
